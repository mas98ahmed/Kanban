<Window x:Class="Presentation.View.BoardView"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:Presentation.View"
        mc:Ignorable="d"
        Title="BoardView" Height="660" Width="1000">
    <Window.Resources>
        <SolidColorBrush x:Key="ListBox.Static.Background" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="ListBox.Static.Border" Color="#FFABADB3"/>
        <SolidColorBrush x:Key="ListBox.Disabled.Background" Color="#FFFFFFFF"/>
        <SolidColorBrush x:Key="ListBox.Disabled.Border" Color="#FFD9D9D9"/>
        <Style x:Key="ListBoxStyle" TargetType="{x:Type ListBox}">
            <Setter Property="Background" Value="{StaticResource ListBox.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource ListBox.Static.Border}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
            <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
            <Setter Property="ScrollViewer.PanningMode" Value="Both"/>
            <Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type ListBox}">
                        <Border CornerRadius="15" x:Name="Bd" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="1" SnapsToDevicePixels="true">
                            <ScrollViewer Focusable="false" Padding="{TemplateBinding Padding}">
                                <ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
                            </ScrollViewer>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="Bd" Value="{StaticResource ListBox.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="Bd" Value="{StaticResource ListBox.Disabled.Border}"/>
                            </Trigger>
                            <MultiTrigger>
                                <MultiTrigger.Conditions>
                                    <Condition Property="IsGrouping" Value="true"/>
                                    <Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
                                </MultiTrigger.Conditions>
                                <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                            </MultiTrigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="FocusVisual">
            <Setter Property="Control.Template">
                <Setter.Value>
                    <ControlTemplate>
                        <Rectangle Margin="2" SnapsToDevicePixels="true" Stroke="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}" StrokeThickness="1" StrokeDashArray="1 2"/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <SolidColorBrush x:Key="Button.Static.Background" Color="#FFDDDDDD"/>
        <SolidColorBrush x:Key="Button.Static.Border" Color="#FF707070"/>
        <SolidColorBrush x:Key="Button.MouseOver.Background" Color="#FFBEE6FD"/>
        <SolidColorBrush x:Key="Button.MouseOver.Border" Color="#FF3C7FB1"/>
        <SolidColorBrush x:Key="Button.Pressed.Background" Color="#FFC4E5F6"/>
        <SolidColorBrush x:Key="Button.Pressed.Border" Color="#FF2C628B"/>
        <SolidColorBrush x:Key="Button.Disabled.Background" Color="#FFF4F4F4"/>
        <SolidColorBrush x:Key="Button.Disabled.Border" Color="#FFADB2B5"/>
        <SolidColorBrush x:Key="Button.Disabled.Foreground" Color="#FF838383"/>
        <Style x:Key="ButtonStyle" TargetType="{x:Type Button}">
            <Setter Property="FocusVisualStyle" Value="{StaticResource FocusVisual}"/>
            <Setter Property="Background" Value="{StaticResource Button.Static.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource Button.Static.Border}"/>
            <Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
            <Setter Property="VerticalContentAlignment" Value="Center"/>
            <Setter Property="Padding" Value="1"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Border CornerRadius="15" x:Name="border" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" SnapsToDevicePixels="true">
                            <ContentPresenter x:Name="contentPresenter" Focusable="False" HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" Margin="{TemplateBinding Padding}" RecognizesAccessKey="True" SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsDefaulted" Value="true">
                                <Setter Property="BorderBrush" TargetName="border" Value="{DynamicResource {x:Static SystemColors.HighlightBrushKey}}"/>
                            </Trigger>
                            <Trigger Property="IsMouseOver" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.MouseOver.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.MouseOver.Border}"/>
                            </Trigger>
                            <Trigger Property="IsPressed" Value="true">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Pressed.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Pressed.Border}"/>
                            </Trigger>
                            <Trigger Property="IsEnabled" Value="false">
                                <Setter Property="Background" TargetName="border" Value="{StaticResource Button.Disabled.Background}"/>
                                <Setter Property="BorderBrush" TargetName="border" Value="{StaticResource Button.Disabled.Border}"/>
                                <Setter Property="TextElement.Foreground" TargetName="contentPresenter" Value="{StaticResource Button.Disabled.Foreground}"/>
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </Window.Resources>
    <Grid>
        <StackPanel Background="#04c582">
            <Grid Margin="0,0,0,430" Height="70" Width="350" HorizontalAlignment="Left" >
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="20*"/>
                    <ColumnDefinition Width="20*"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition/>
                    <RowDefinition/>
                </Grid.RowDefinitions>
                <Label Content="{Binding Path=user.Email}" FontSize="18" FontWeight="Bold" Foreground="White" Grid.Column="0" Grid.Row="0"/>
                <Label Content="{Binding Path=user.Nickname}" FontSize="18" FontWeight="Bold" Foreground="White" Grid.Column="0" Grid.Row="1"/>
                <Button Content="Logout"  Click="Logout_Click" Grid.Row="0" Grid.Column="1" FontSize="18" Background="#545d6a" Foreground="White" Margin="20.667,20,27,19.333" Grid.RowSpan="2" Style="{DynamicResource ButtonStyle}"/>
            </Grid>
        </StackPanel>
        <StackPanel>
            <Grid Margin="530,-12,0,430" Height="70" Width="448" HorizontalAlignment="Left" RenderTransformOrigin="0.49,0.149">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="15*"/>
                    <ColumnDefinition Width="15*"/>
                    <ColumnDefinition Width="26*"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="4*"/>
                    <RowDefinition Height="9*"/>
                </Grid.RowDefinitions>
                <Button Content="ResetFilter" x:Name="ResetFilter" Grid.Column="0" Grid.Row="1" Margin="10,11,9,10.333" FontSize="18" Background="#545d6a" Foreground="White" Click="ResetFilter_Click" Style="{DynamicResource ButtonStyle}"/>
                <Button Content="Filter" x:Name="Filter" Grid.Column="1" Grid.Row="1" Margin="11,11,11,10.333" FontSize="18" Background="#545d6a" Foreground="White" Click="Filter_Click" Style="{DynamicResource ButtonStyle}"/>
                <TextBox Text="{Binding Path=Searching_Word,Mode=TwoWay}" Grid.Column="2" Grid.Row="1" Margin="9,11,10,10.333" Background="#545d6a" Foreground="White" FontSize="18"/>
            </Grid>
        </StackPanel>
        <StackPanel>
            <Grid Margin="10">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="55*"/>
                    <ColumnDefinition Width="839*"/>
                </Grid.ColumnDefinitions>
                <ListBox x:Name="Columns"  BorderBrush="#2e3137" BorderThickness="2" ItemsSource="{Binding Path=Board.Columns}" SelectedValue="{Binding Path=DataContext.SelectedColumn, Mode=TwoWay, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}" Height="396" Margin="0,80,0.334,0" Grid.ColumnSpan="2">
                    <ListBox.Background>
                        <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                            <GradientStop Color="Black" Offset="0"/>
                            <GradientStop Color="#2e3137"/>
                        </LinearGradientBrush>
                    </ListBox.Background>
                    <ListBox.ItemsPanel>
                        <ItemsPanelTemplate>
                            <StackPanel Orientation="Horizontal" Background="#2e3137"/>
                        </ItemsPanelTemplate>
                    </ListBox.ItemsPanel>
                    <ListBox.ItemTemplate>
                        <DataTemplate>
                            <Border BorderBrush="#2e3137" BorderThickness="1" CornerRadius="15">
                                <StackPanel Orientation="Vertical" Background="#2e3137">
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition/>
                                            <ColumnDefinition/>
                                            <ColumnDefinition/>
                                        </Grid.ColumnDefinitions>
                                        <Button Content="Move-Left" Click="MoveColumnLeft_Click" Grid.Row="0" Grid.Column="0" Margin="8" FontSize="16" Background="#545d6a" Foreground="White" RenderTransformOrigin="0.5,0.5" Style="{DynamicResource ButtonStyle}"/>
                                        <Button x:Name="RemoveColumn" Content="Remove Column" Click="RemoveColumn_Click" FontSize="16" Background="#545d6a" Foreground="White" Grid.Row="0" Grid.Column="1" Margin="8" Style="{DynamicResource ButtonStyle}"/>
                                        <Button Content="Move-Right"  Click="MoveRight_Click"  Grid.Row="0" Grid.Column="2" FontSize="16" Background="#545d6a" Foreground="White" Margin="8" Style="{DynamicResource ButtonStyle}"/>
                                    </Grid>
                                    <Grid>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition/>
                                            <ColumnDefinition/>
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition/>
                                            <RowDefinition/>
                                        </Grid.RowDefinitions>
                                        <TextBox Text="{Binding Path=Name, Mode=TwoWay}"  Grid.Column="0" Grid.Row="0" Background="#545d6a" Foreground="White" FontSize="18" Width="200" Grid.ColumnSpan="1" Margin="5" TextAlignment="Center" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                                        <TextBox Text="{Binding Path=Limit, Mode=TwoWay}" Grid.Column="0" Grid.Row="1" Background="#545d6a" Foreground="White" FontSize="18" Width="200" Grid.ColumnSpan="1" Margin="5" TextAlignment="Center" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                                    </Grid>
                                    <StackPanel Orientation="Vertical" Background="#2e3137">
                                        <ListBox BorderBrush="#2e3137" Height="400" x:Name="Tasks" Background="#2e3137"  ScrollViewer.VerticalScrollBarVisibility="Visible" ItemsSource="{Binding Path=Tasks}" SelectedItem="{Binding Path=DataContext.SelectedTask, Mode=TwoWay, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type Window}}}">
                                            <ListBox.ItemContainerStyle>
                                                <Style TargetType="{x:Type ListBoxItem}">
                                                    <Style.Triggers>
                                                        <DataTrigger Binding="{Binding Path=IsVisible}" Value="False">
                                                            <Setter Property="Visibility" Value="Collapsed"/>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </ListBox.ItemContainerStyle>
                                            <ListBox.ItemTemplate>
                                                <DataTemplate>
                                                    <Border BorderBrush="{Binding Path=BorderColor, Mode=OneWay}" BorderThickness="3"  Background="{Binding Path=TaskBackground, Mode=OneWay}">
                                                        <StackPanel Orientation="Vertical">
                                                            <Grid>
                                                                <Grid.ColumnDefinitions>
                                                                    <ColumnDefinition/>
                                                                    <ColumnDefinition/>
                                                                </Grid.ColumnDefinitions>
                                                                <Grid.RowDefinitions>
                                                                    <RowDefinition/>
                                                                    <RowDefinition/>
                                                                    <RowDefinition/>
                                                                    <RowDefinition/>
                                                                    <RowDefinition/>
                                                                    <RowDefinition/>
                                                                    <RowDefinition/>
                                                                </Grid.RowDefinitions>
                                                                <Label Content="ID:" Grid.Column="0" Grid.Row="0" Margin="5" Foreground="White"/>
                                                                <Label Content="{Binding Path=Id}" Width="auto" Grid.Column="1" Grid.Row="0" Height="Auto" Margin="0" Foreground="White"/>
                                                                <Label Content="Title:" Grid.Column="0" Grid.Row="1" Margin="5" Foreground="White"/>
                                                                <Label Content="{Binding Path=Title}" MaxWidth="250" Height="Auto" Grid.Column="1" Grid.Row="1" Margin="5" Foreground="White"/>
                                                                <Label Content="Descriprion:" Grid.Column="0" Grid.Row="2" Margin="2" Foreground="White"/>
                                                                <Label   MaxWidth="250"  Height="Auto" Grid.Column="1" Grid.Row="2" Margin="5" Foreground="White">
                                                                    <Label.Content>
                                                                        <AccessText TextWrapping="Wrap" Text="{Binding Path=Descritpion}"/>
                                                                    </Label.Content>
                                                                </Label>
                                                                <Label Content="DueDate:" Grid.Column="0" Grid.Row="3" Margin="5" Foreground="White"/>
                                                                <Label Content="{Binding Path=DueDate}"  MaxWidth="150" Height="Auto" Grid.Column="1" Grid.Row="3" Margin="5" Foreground="White"/>
                                                                <Label Content="CreationTime:" Grid.Column="0" Grid.Row="4" Margin="5" Foreground="White"/>
                                                                <Label Content="{Binding Path=CreationTime}" Grid.Column="1" Grid.Row="4" MaxWidth="250" Height="Auto" Margin="5" Foreground="White"/>
                                                                <Label Content="Assignee:" Grid.Column="0" Grid.Row="5" Margin="5" Foreground="White"/>
                                                                <Label Content="{Binding Path=EmailAssignee}"  MaxWidth="250" Height="Auto" Grid.Column="1" Grid.Row="5" Margin="5" Foreground="White"/>
                                                            </Grid>
                                                        </StackPanel>
                                                    </Border>
                                                </DataTemplate>
                                            </ListBox.ItemTemplate>
                                        </ListBox>
                                    </StackPanel>
                                </StackPanel>
                            </Border>
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                </ListBox>
            </Grid>
        </StackPanel>
        <StackPanel>
            <Grid Margin="-250,500,346.333,430" Width="300">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="23*"/>
                    <RowDefinition Height="23*"/>
                </Grid.RowDefinitions>
                <Button Content="Add Task" x:Name="AddTask" Grid.Column="0" Grid.Row="0" Margin="23,10,10,10" FontSize="18" Background="#545d6a" Foreground="White" Click="AddTask_Click" RenderTransformOrigin="0.501,0.5" Style="{DynamicResource ButtonStyle}"/>
                <Button Content="Delete Task" x:Name="DeleteTask" Grid.Column="1" Grid.Row="0" Margin="10" FontSize="18" Background="#545d6a" Foreground="White" Click="DeleteTask_Click" IsEnabled="{Binding Path=EnableForwardTask,Mode=OneWay}" Style="{DynamicResource ButtonStyle}"/>
                <Button Content="Add Column" x:Name="AddColumn"  Grid.Row="1" Margin="23,10,0,20" FontSize="18" Background="#545d6a" Foreground="White" HorizontalAlignment="Left" Width="117" Click="AddColumn_Click" Style="{DynamicResource ButtonStyle}"/>
                <Button Content="Advance Task" x:Name="AdvanceTask"  Grid.Row="1" Grid.Column="1" Margin="10,10,0,20" FontSize="18" Background="#545d6a" Foreground="White" HorizontalAlignment="Left" Width="130" Click="AdvanceTask_Click" IsEnabled="{Binding Path=EnableForwardTask,Mode=OneWay}" Style="{DynamicResource ButtonStyle}"/>
            </Grid>
        </StackPanel>
        <StackPanel>
            <Grid Margin="550,500,0,430" Height="100" Width="400" HorizontalAlignment="Left">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="203*"/>
                    <ColumnDefinition Width="203*"/>

                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition/>
                    <RowDefinition/>
                </Grid.RowDefinitions>
                <Button Content="Sort Tasks" x:Name="SortTasks" Grid.Column="0" Grid.Row="0" Margin="10" FontSize="18" Background="#545d6a" Foreground="White" Grid.ColumnSpan="3" Click="SortTasks_Click" Style="{DynamicResource ButtonStyle}"/>
                <Button Content="Assign Tasks" x:Name="AssignTasks" Grid.Column="2" Grid.Row="1" Margin="10.333,10,10,10" FontSize="18" Background="#545d6a" Foreground="White" IsEnabled="{Binding Path=EnableForwardTask,Mode=OneWay}" Visibility="{Binding Path=Host,Mode=TwoWay}" Click="AssignTasks_Click" Style="{DynamicResource ButtonStyle}"/>
                <Button Content="Update Task" x:Name="UpdateTask" Grid.Column="0" Grid.Row="1" Margin="10" FontSize="18" Background="#545d6a" Foreground="White" Click="UpdateTask_Click" IsEnabled="{Binding Path=EnableForwardTask,Mode=OneWay}" Style="{DynamicResource ButtonStyle}"/>
            </Grid>
        </StackPanel>
    </Grid>
</Window>
